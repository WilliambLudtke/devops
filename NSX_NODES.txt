#!/usr/bin/env python3

import requests
from requests.auth import HTTPBasicAuth
import sys
import json

# Verificar se todos os parâmetros foram passados
if len(sys.argv) != 4:
    print("Uso correto: python seu_script.py <username> <password> <nsx_manager>")
    sys.exit(1)

# Configurações (a partir dos parâmetros de linha de comando)
USERNAME = sys.argv[1]
PASSWORD = sys.argv[2]
NSX_MANAGER = sys.argv[3]

# URL para o endpoint de transport-nodes
URL_NODES = f"{NSX_MANAGER}/api/v1/transport-nodes"

# Desativar warnings de SSL (caso não tenha um certificado válido)
requests.packages.urllib3.disable_warnings()

# Autenticação
auth = HTTPBasicAuth(USERNAME, PASSWORD)

# Cabeçalhos
headers = {
    "Accept": "application/json"
}

# Requisição GET para os nodes
response = requests.get(URL_NODES, auth=auth, headers=headers, verify=False)

# Verifica resposta
nodes_info = []
if response.status_code == 200:
    data = response.json()
    
    for node in data.get("results", []):
        node_name = node.get('display_name', 'N/A')
        node_id = node.get('id', 'N/A')
        
        node_metrics = {
            "node_name": node_name,
            "node_id": node_id
        }
        
        nodes_info.append(node_metrics)
else:
    print(f"Erro: {response.status_code} - {response.text}")

# Exibir a saída em formato JSON
print(json.dumps(nodes_info, indent=4))
