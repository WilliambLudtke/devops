// Capturar os parâmetros passados pela linha de comando
var args = process.argv.slice(2);

if (args.length !== 3) {
    console.error("Erro: Parâmetros inválidos. Uso: node script.js <usuario> <senha> <url>");
    process.exit(1);
}

var USERNAME = args[0];
var PASSWORD = args[1];
var NSX_MANAGER = args[2];

var URL_NODES = NSX_MANAGER + '/api/v1/transport-nodes';

var https = require('https');

function getTransportNodes() {
    return new Promise((resolve, reject) => {
        const options = {
            method: 'GET',
            auth: `${USERNAME}:${PASSWORD}`,
            rejectUnauthorized: false
        };

        https.get(URL_NODES, options, (res) => {
            let data = '';

            res.on('data', (chunk) => {
                data += chunk;
            });

            res.on('end', () => {
                if (res.statusCode === 200) {
                    try {
                        const jsonData = JSON.parse(data);
                        const nodes = jsonData.results.map(node => ({
                            name: node.display_name,
                            id: node.id
                        }));
                        resolve(nodes);
                    } catch (error) {
                        reject("Erro ao processar JSON: " + error.message);
                    }
                } else {
                    reject(`Erro ao obter nodes: ${res.statusCode} - ${res.statusMessage}`);
                }
            });
        }).on('error', (error) => {
            reject("Erro na requisição: " + error.message);
        });
    });
}

async function main() {
    try {
        const nodes = await getTransportNodes();
        console.log(JSON.stringify(nodes, null, 4));
    } catch (error) {
        console.error(error);
        process.exit(1);
    }
}

main();
