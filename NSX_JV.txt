var fetch = require('node-fetch');

// Capturar os parâmetros passados pelo Zabbix
var args = process.argv.slice(2);

if (args.length !== 3) {
    console.error("Erro: Parâmetros inválidos. Uso: script.js <usuario> <senha> <url>");
    process.exit(1);
}

var USERNAME = args[0];
var PASSWORD = args[1];
var VRNI_MANAGER = args[2];

var URL_LOGIN = VRNI_MANAGER + '/api/v1/login';
var URL_NODES = VRNI_MANAGER + '/api/ni/entities/nsxt-transport-nodes';

async function authenticate() {
    try {
        var response = await fetch(URL_LOGIN, {
            method: 'POST',
            headers: { 'Content-Type': 'application/json' },
            body: JSON.stringify({ username: USERNAME, password: PASSWORD })
        });

        if (!response.ok) {
            console.error('Erro ao autenticar: ' + response.status + ' - ' + await response.text());
            process.exit(1);
        }

        var data = await response.json();
        return data.token;
    } catch (error) {
        console.error('Erro na autenticação: ' + error.message);
        process.exit(1);
    }
} // <-- Verifique se este fechamento da função está correto

async function getTransportNodes(token) {
    try {
        var response = await fetch(URL_NODES, {
            headers: { 
                'Content-Type': 'application/json',
                'Authorization': 'Bearer ' + token
            }
        });

        if (!response.ok) {
            console.error('Erro ao obter nodes: ' + response.status + ' - ' + await response.text());
            process.exit(1);
        }

        var data = await response.json();
        return data.results || [];
    } catch (error) {
        console.error('Erro ao buscar nodes: ' + error.message);
        process.exit(1);
    }
}

(async function() {
    var token = await authenticate();
    var nodes = await getTransportNodes(token);

    nodes.forEach(function(node) {
        console.log(node.name + ',' + node.id);
    });
})();
