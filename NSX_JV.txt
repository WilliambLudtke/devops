var fetch = require('node-fetch');

// Capturar os parâmetros passados pelo Zabbix
var args = process.argv.slice(2);

if (args.length !== 3) {
    console.error("Erro: Parâmetros inválidos. Uso: script.js <usuario> <senha> <url>");
    process.exit(1);
}

var USERNAME = args[0];
var PASSWORD = args[1];
var VRNI_MANAGER = args[2];

var URL_LOGIN = VRNI_MANAGER + '/api/v1/login';
var URL_NODES = VRNI_MANAGER + '/api/ni/entities/nsxt-transport-nodes';

function authenticate() {
    return fetch(URL_LOGIN, {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ username: USERNAME, password: PASSWORD })
    })
    .then(function(response) {
        if (!response.ok) {
            console.error('Erro ao autenticar: ' + response.status + ' - ' + response.statusText);
            process.exit(1);
        }
        return response.json();
    })
    .then(function(data) {
        return data.token;
    })
    .catch(function(error) {
        console.error('Erro na autenticação: ' + error.message);
        process.exit(1);
    });
}

function getTransportNodes(token) {
    return fetch(URL_NODES, {
        headers: { 
            'Content-Type': 'application/json',
            'Authorization': 'Bearer ' + token
        }
    })
    .then(function(response) {
        if (!response.ok) {
            console.error('Erro ao obter nodes: ' + response.status + ' - ' + response.statusText);
            process.exit(1);
        }
        return response.json();
    })
    .then(function(data) {
        return data.results || [];
    })
    .catch(function(error) {
        console.error('Erro ao buscar nodes: ' + error.message);
        process.exit(1);
    });
}

function main() {
    authenticate()
        .then(function(token) {
            return getTransportNodes(token);
        })
        .then(function(nodes) {
            nodes.forEach(function(node) {
                console.log(node.name + ',' + node.id);
            });
        })
        .catch(function(error) {
            console.error('Erro no fluxo principal: ' + error.message);
            process.exit(1);
        });
}

main();
